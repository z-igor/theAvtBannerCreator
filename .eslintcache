[{"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\index.js":"1","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\App.jsx":"3","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Banners\\Banners.jsx":"4","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Creator\\Creator.jsx":"5","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Preview\\Preview.jsx":"6","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\UploadFile\\UploadFIle.jsx":"7","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\UploadFile\\UploadFile.jsx":"8","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\reducers\\index.js":"9","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\reducers\\creatorReducer.js":"10","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\store.js":"11","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\tools\\helpers.js":"12","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\actions\\actionsType.js":"13","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\actions\\index.js":"14","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\hook.js":"15","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\ColorPicker\\ColorPicker.jsx":"16","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\BgPicker\\BgPicker.jsx":"17","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Canvas\\CanvasBanner.jsx":"18"},{"size":709,"mtime":1607682130384,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606687960253,"results":"21","hashOfConfig":"20"},{"size":442,"mtime":1607418196641,"results":"22","hashOfConfig":"20"},{"size":1930,"mtime":1607858787407,"results":"23","hashOfConfig":"20"},{"size":7068,"mtime":1607899966854,"results":"24","hashOfConfig":"20"},{"size":5565,"mtime":1607935019080,"results":"25","hashOfConfig":"20"},{"size":1190,"mtime":1607450435775,"results":"26","hashOfConfig":"20"},{"size":1894,"mtime":1607859498240,"results":"27","hashOfConfig":"20"},{"size":155,"mtime":1607585385577,"results":"28","hashOfConfig":"20"},{"size":4522,"mtime":1607897209604,"results":"29","hashOfConfig":"20"},{"size":127,"mtime":1607585582479,"results":"30","hashOfConfig":"20"},{"size":4904,"mtime":1607934150104,"results":"31","hashOfConfig":"20"},{"size":215,"mtime":1607776378734,"results":"32","hashOfConfig":"20"},{"size":426,"mtime":1607776375082,"results":"33","hashOfConfig":"20"},{"size":329,"mtime":1607865872829,"results":"34","hashOfConfig":"20"},{"size":1001,"mtime":1607899824484,"results":"35","hashOfConfig":"20"},{"size":1216,"mtime":1607858442831,"results":"36","hashOfConfig":"20"},{"size":4158,"mtime":1607933763917,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"195d3q6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\index.js",[],["82","83"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\reportWebVitals.js",[],["84","85"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\App.jsx",[],["86","87"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Banners\\Banners.jsx",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Creator\\Creator.jsx",["88"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport UploadFile from \"../UploadFile/UploadFile\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { createBannerA, updateBannerA } from \"../../redux/actions/\";\r\nimport { makeRandomId } from \"../../tools/helpers\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport BgPicker from \"../BgPicker/BgPicker\";\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 0,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function Creator() {\r\n  const [form] = Form.useForm();\r\n  const Dispatch = useDispatch();\r\n  const { bannerId, bannerData } = useGetBannerInfo();\r\n\r\n  const [imageUri, setImageUri] = useState();\r\n  const [uploadedImgs, updateUploadedImgs] = useState([]);\r\n  const [resetForm, setResetForm] = useState(false);\r\n  const [failedForm, setFailedForm] = useState(false);\r\n  const refBannerId = useRef(bannerId);\r\n\r\n  const onValuesChange = () => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (values.label && values.label.trim()) {\r\n      if (typeof values.imageUri !== \"object\") {\r\n        Dispatch(updateBannerA(values));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (refBannerId.current !== bannerId) {\r\n      updateUploadedImgs([]);\r\n      refBannerId.current = bannerId;\r\n    }\r\n\r\n    form.setFieldsValue({ ...bannerData });\r\n\r\n    if (typeof values.imageUri === \"object\") {\r\n      Dispatch(updateBannerA({ ...values, imageUri }));\r\n    }\r\n  }, [Dispatch, bannerData, bannerId, form, imageUri]);\r\n\r\n  const onFinish = (values) => {\r\n    values.id = makeRandomId();\r\n\r\n    Dispatch(createBannerA(values));\r\n  };\r\n\r\n  const onFinishFailed = (info) => {\r\n    setFailedForm(!!info.errorFields.length);\r\n  };\r\n\r\n  const onReset = () => {\r\n    updateUploadedImgs([]);\r\n    setResetForm(true);\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      label: \"текст баннера\",\r\n      description:\r\n        \"Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum\",\r\n      bgcolor: \"linear-gradient(to top, #7e7eff 20%, skyblue 100%)\",\r\n      imageUri: \"imgs/picture.png\",\r\n      uppercase: false,\r\n      url: \"https://www.ya.ru\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"main__creator creator\">\r\n      <div className=\"headers\">\r\n        <h2>Форма ввода параметров баннера</h2>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          className=\"creator__form\"\r\n          name=\"control-hooks\"\r\n          layout=\"vertical\"\r\n          size=\"small\"\r\n        >\r\n          <Form.Item name=\"url\" label=\"URL\" tooltip=\"URL ссылка\">\r\n            <Input placeholder=\"URL\" />\r\n          </Form.Item>\r\n          {/* end url */}\r\n\r\n          <Form.Item label=\"Название\" tooltip=\"Название баннера. 3 строки\">\r\n            <Row>\r\n              <Form.Item\r\n                name=\"label\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Требуется название баннера\",\r\n                  },\r\n                  {\r\n                    pattern: /^[а-яА-ЯёЁ\\w]+/,\r\n                    message: 'Начните с цифры, буквы или c подчеркивания \"_\"',\r\n                  },\r\n                ]}\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"Название баннера\" />\r\n              </Form.Item>\r\n              {/* end label */}\r\n\r\n              <Form.Item\r\n                name=\"uppercase\"\r\n                valuePropName=\"checked\"\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Checkbox>Заглавными буквами</Checkbox>\r\n              </Form.Item>\r\n              {/* end uppercase */}\r\n            </Row>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"textColor\"\r\n            label=\"Цвет текста\"\r\n            getValueFromEvent={(data) => {\r\n              return data;\r\n            }}\r\n          >\r\n            <ColorPicker onChange={() => {}} setGradient={\"\"} />\r\n          </Form.Item>\r\n          {/* end textColor */}\r\n\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Описание\"\r\n            tooltip=\"Описание баннера. 3 строки\"\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"Описание баннера в 3 строки...\"\r\n              autoSize\r\n            />\r\n          </Form.Item>\r\n          {/* end description */}\r\n\r\n          <BgPicker />\r\n\r\n          <UploadFile\r\n            form={form}\r\n            setImageUri={setImageUri}\r\n            uploadedImgs={uploadedImgs}\r\n            updateUploadedImgs={updateUploadedImgs}\r\n          />\r\n          {/* end upload image or insert uri */}\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n              disabled={!!bannerId || resetForm}\r\n            >\r\n              Создать\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n            >\r\n              Сброс\r\n            </Button>\r\n            <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n              Заполнить\r\n            </Button>\r\n          </Form.Item>\r\n          {/* end action buttons */}\r\n        </Form>\r\n        {/* end form */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n/* Старая версия заливки. Для супер-технарей-верстальщиков\r\n<Form.Item\r\n  name=\"bgcolor\"\r\n  label=\"Заливка\"\r\n  tooltip=\"Цвета, которые поддерживает css свойство 'background'\"\r\n>\r\n  <Input placeholder=\"css background: #fff, white, gradients \" />\r\n</Form.Item> */\r\n/* end bgcolor */\r\n\r\n/* const onUpdate = (evt) => {\r\n    // evt.preventDefault();\r\n    form.validateFields();\r\n    let values = form.getFieldsValue();\r\n    if (values.label && values.label.trim()) {\r\n      if (typeof values.imageUri === \"object\") {\r\n        values.imageUri = imageUri;\r\n      }\r\n      values.id = bannerId;\r\n      Dispatch(updateBannerA(values));\r\n    }\r\n  };\r\n*/\r\n\r\n/* <Button\r\n    type=\"primary\"\r\n    htmlType=\"button\"\r\n    onClick={onUpdate}\r\n    style={{\r\n      marginRight: \"8px\",\r\n    }}\r\n    disabled={resetForm}\r\n  >\r\n    Сохранить\r\n  </Button>\r\n*/\r\n",["89","90"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Preview\\Preview.jsx",["91","92"],"import React, { useRef, useState } from \"react\";\r\nimport picture from \"../../imgs/picture.png\";\r\n\r\nimport { Button, Dropdown, Menu, message } from \"antd\";\r\nimport { copyToClipboard, downloadPng } from \"../../tools/helpers\";\r\nimport CanvasBanner from \"../Canvas/CanvasBanner\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { DownOutlined, PictureOutlined, SmileTwoTone } from \"@ant-design/icons\";\r\n\r\nexport default function Preview() {\r\n  const htmlRef = useRef();\r\n  const [canvasElm, setCanvasElm] = useState();\r\n  const { bannerId, bannerData } = useGetBannerInfo();\r\n\r\n  const onDownloadPng = (e) => {\r\n    message.info(\r\n      {\r\n        content: (\r\n          <span>\r\n            Запуск ракет через 3... 2... 1... <SmileTwoTone />\r\n          </span>\r\n        ),\r\n      },\r\n      2\r\n    );\r\n    downloadPng(canvasElm, e);\r\n  };\r\n\r\n  const onSerializeJSONClick = (e) => {\r\n    let copyJson = JSON.stringify(bannerData, null, 2);\r\n    copyToClipboard(copyJson);\r\n  };\r\n\r\n  const onGetHTMLClick = (e) => {\r\n    let copyHTML = htmlRef.current.outerHTML;\r\n    copyToClipboard(copyHTML);\r\n  };\r\n\r\n  const defRes = {\r\n    label: \"авито баннер\",\r\n    desc:\r\n      \"Далеко-далеко за словесными, горами в стране гласных и согласных живут рыбные тексты. Прямо имени но свое! Журчит первую она страна даже инициал деревни алфавит подзаголовок даль строчка переписывается, продолжил имеет пустился предупредила?\",\r\n    href: \"#/\",\r\n  };\r\n\r\n  const bannerStyle = {\r\n    content: {\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n    },\r\n    wrapper: {\r\n      borderRadius: \"15px\",\r\n      height: \"100%\",\r\n      maxWidth: \"300px\",\r\n      maxHeight: \"400px\",\r\n      margin: \"0 auto\",\r\n      overflow: \"hidden\",\r\n    },\r\n    bgColor: {\r\n      background: bannerData.bgcolor ? bannerData.bgcolor.style : \"#e6e6e6\",\r\n      height: \"inherit\",\r\n    },\r\n    one: {\r\n      height: \"inherit\",\r\n      padding: \"2rem .8rem\",\r\n      color: bannerData.textColor ? bannerData.textColor.style : \"#333\",\r\n      backgroundImage: bannerData.imageUri\r\n        ? `url(${bannerData.imageUri})`\r\n        : `url(${picture})`,\r\n      backgroundSize: \"70%\",\r\n      backgroundPosition: \"top 25px center\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      textDecoration: \"none\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"#333\",\r\n    },\r\n    label: {\r\n      display: \"-webkit-box\",\r\n      WebkitLineClamp: 3,\r\n      WebkitBoxOrient: \"vertical\",\r\n      textOverflow: \"ellipsis\",\r\n      fontSize: \"2rem\",\r\n      lineHeight: \"2rem\",\r\n      fontWeight: \"600\",\r\n      textTransform: bannerData.uppercase ? \"uppercase\" : \"\",\r\n      maxWidth: \"260px\",\r\n      overflow: \"hidden\",\r\n      color: \"inherit\",\r\n      paddingBottom: \"5px\",\r\n    },\r\n    desc: {\r\n      display: \"-webkit-box\",\r\n      WebkitLineClamp: 3,\r\n      WebkitBoxOrient: \"vertical\",\r\n      fontSize: \"calc(50vh*0.048)\",\r\n      lineHeight: \"calc(50vh*0.049)\",\r\n      overflow: \"hidden\",\r\n    },\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"1\" icon={<PictureOutlined />}>\r\n        <a href={bannerData.imageUri} target=\"blank\" download=\"image.png\">\r\n          Картинку?\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" icon={<PictureOutlined />}>\r\n        <a\r\n          href=\"#\"\r\n          target=\"blank\"\r\n          onClick={onDownloadPng}\r\n          download=\"banner.png\"\r\n        >\r\n          Баннер?\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"app__div app__preview preview\">\r\n      <div className=\"headers\">\r\n        <h2>Превью баннера</h2>\r\n      </div>\r\n\r\n      <section\r\n        className=\"preview__content content\"\r\n        ref={htmlRef}\r\n        style={bannerStyle.content}\r\n      >\r\n        <div className=\"preview__wrapper\" style={bannerStyle.wrapper}>\r\n          <div className=\"preview__bg-color\" style={bannerStyle.bgColor}>\r\n            <a\r\n              className=\"preview__one\"\r\n              target=\"blank\"\r\n              style={bannerStyle.one}\r\n              href={bannerData.url}\r\n            >\r\n              <h1 className=\"preview__label\" style={bannerStyle.label}>\r\n                {bannerData.label ? bannerData.label : defRes.label}\r\n              </h1>\r\n\r\n              {bannerData.description && (\r\n                <p className=\"preview__desc\" style={bannerStyle.desc}>\r\n                  {bannerData.description}\r\n                </p>\r\n              )}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* end content banner */}\r\n\r\n      <section className=\"preview__actions\">\r\n        <p>Экспорт</p>\r\n        <div className=\"preview__action-btns\">\r\n          <Dropdown overlay={menu}>\r\n            <Button type=\"primary\">\r\n              png <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          <Button type=\"primary\" onClick={onGetHTMLClick}>\r\n            html\r\n          </Button>\r\n          <Button type=\"primary\" onClick={onSerializeJSONClick}>\r\n            json\r\n          </Button>\r\n        </div>\r\n      </section>\r\n      <div className=\"canvas-hidden\">\r\n        <CanvasBanner canvasElm={setCanvasElm} />\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\UploadFile\\UploadFIle.jsx",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\UploadFile\\UploadFile.jsx",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\reducers\\creatorReducer.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\store.js",[],["93","94"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\tools\\helpers.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\actions\\actionsType.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\redux\\actions\\index.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\hook.js",[],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\ColorPicker\\ColorPicker.jsx",["95","96"],"C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\BgPicker\\BgPicker.jsx",["97"],"import React, { useState } from \"react\";\r\n\r\nimport { Form, message, Radio } from \"antd\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\n\r\nexport default function BgPicker({ ...props }) {\r\n  const [radioVal, setRadioVal] = useState(1);\r\n\r\n  const onChange = (e) => {\r\n    setRadioVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form.Item label=\"Заливка\">\r\n        <Radio.Group\r\n          className=\"radio-group\"\r\n          onChange={onChange}\r\n          value={radioVal}\r\n        >\r\n          <Radio value={1}>Сплошной цвет</Radio>\r\n          <Radio value={2}>Градиент</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      {radioVal === 1 && (\r\n        <Form.Item\r\n          name=\"bgcolor\"\r\n          getValueFromEvent={(data) => {\r\n            return data;\r\n          }}\r\n        >\r\n          <ColorPicker onChange={() => {}} setGradient={\"\"} />\r\n        </Form.Item>\r\n      )}\r\n\r\n      {radioVal === 2 && (\r\n        <Form.Item\r\n          name=\"bgcolor\"\r\n          getValueFromEvent={(data) => {\r\n            return data;\r\n          }}\r\n        >\r\n          <ColorPicker onChange={() => {}} setGradient={true} />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-banner-constructor\\src\\components\\Canvas\\CanvasBanner.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":27,"column":10,"nodeType":"108","messageId":"109","endLine":27,"endColumn":20},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"112","line":13,"column":11,"nodeType":"108","messageId":"109","endLine":13,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":116,"column":9,"nodeType":"115","endLine":121,"endColumn":10},{"ruleId":"98","replacedBy":"116"},{"ruleId":"100","replacedBy":"117"},{"ruleId":"106","severity":1,"message":"118","line":37,"column":22,"nodeType":"108","messageId":"109","endLine":37,"endColumn":35},{"ruleId":"106","severity":1,"message":"119","line":38,"column":25,"nodeType":"108","messageId":"109","endLine":38,"endColumn":41},{"ruleId":"106","severity":1,"message":"120","line":3,"column":16,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],"no-unused-vars","'failedForm' is assigned a value but never used.","Identifier","unusedVar",["121"],["122"],"'bannerId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["121"],["122"],"'setColorAttrs' is assigned a value but never used.","'setGradientAttrs' is assigned a value but never used.","'message' is defined but never used.","no-global-assign","no-unsafe-negation"]