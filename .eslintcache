[{"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\index.js":"1","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\store.js":"3","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\App.jsx":"4","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Creator\\Creator.jsx":"5","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Banners\\Banners.jsx":"6","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Preview\\Preview.jsx":"7","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\reducers\\index.js":"8","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\hook.js":"9","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\tools\\helpers.js":"10","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\actions\\index.js":"11","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\reducers\\creatorReducer.js":"12","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\UploadFile\\UploadFile.jsx":"13","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\ColorPicker\\ColorPicker.jsx":"14","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\BgPicker\\BgPicker.jsx":"15","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Canvas\\CanvasBanner.jsx":"16","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\actions\\actionsType.js":"17"},{"size":709,"mtime":1607682130384,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606687960253,"results":"20","hashOfConfig":"19"},{"size":127,"mtime":1607585582479,"results":"21","hashOfConfig":"22"},{"size":442,"mtime":1607418196641,"results":"23","hashOfConfig":"19"},{"size":7068,"mtime":1607899966854,"results":"24","hashOfConfig":"19"},{"size":1930,"mtime":1607858787407,"results":"25","hashOfConfig":"22"},{"size":5565,"mtime":1607935019080,"results":"26","hashOfConfig":"22"},{"size":155,"mtime":1607585385577,"results":"27","hashOfConfig":"19"},{"size":329,"mtime":1607865872829,"results":"28","hashOfConfig":"22"},{"size":4904,"mtime":1607934150104,"results":"29","hashOfConfig":"19"},{"size":426,"mtime":1607776375082,"results":"30","hashOfConfig":"19"},{"size":4522,"mtime":1607897209604,"results":"31","hashOfConfig":"19"},{"size":1894,"mtime":1607859498240,"results":"32","hashOfConfig":"22"},{"size":1001,"mtime":1607899824484,"results":"33","hashOfConfig":"19"},{"size":1216,"mtime":1607858442831,"results":"34","hashOfConfig":"22"},{"size":4158,"mtime":1607933763917,"results":"35","hashOfConfig":"19"},{"size":215,"mtime":1607776378734,"results":"36","hashOfConfig":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b0augb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"blrg3d",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\index.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\reportWebVitals.js",[],["73","74"],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\store.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\App.jsx",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Creator\\Creator.jsx",["75"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport UploadFile from \"../UploadFile/UploadFile\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { createBannerA, updateBannerA } from \"../../redux/actions/\";\r\nimport { makeRandomId } from \"../../tools/helpers\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport BgPicker from \"../BgPicker/BgPicker\";\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 0,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function Creator() {\r\n  const [form] = Form.useForm();\r\n  const Dispatch = useDispatch();\r\n  const { bannerId, bannerData } = useGetBannerInfo();\r\n\r\n  const [imageUri, setImageUri] = useState();\r\n  const [uploadedImgs, updateUploadedImgs] = useState([]);\r\n  const [resetForm, setResetForm] = useState(false);\r\n  const [failedForm, setFailedForm] = useState(false);\r\n  const refBannerId = useRef(bannerId);\r\n\r\n  const onValuesChange = () => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (values.label && values.label.trim()) {\r\n      if (typeof values.imageUri !== \"object\") {\r\n        Dispatch(updateBannerA(values));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (refBannerId.current !== bannerId) {\r\n      updateUploadedImgs([]);\r\n      refBannerId.current = bannerId;\r\n    }\r\n\r\n    form.setFieldsValue({ ...bannerData });\r\n\r\n    if (typeof values.imageUri === \"object\") {\r\n      Dispatch(updateBannerA({ ...values, imageUri }));\r\n    }\r\n  }, [Dispatch, bannerData, bannerId, form, imageUri]);\r\n\r\n  const onFinish = (values) => {\r\n    values.id = makeRandomId();\r\n\r\n    Dispatch(createBannerA(values));\r\n  };\r\n\r\n  const onFinishFailed = (info) => {\r\n    setFailedForm(!!info.errorFields.length);\r\n  };\r\n\r\n  const onReset = () => {\r\n    updateUploadedImgs([]);\r\n    setResetForm(true);\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      label: \"текст баннера\",\r\n      description:\r\n        \"Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum\",\r\n      bgcolor: \"linear-gradient(to top, #7e7eff 20%, skyblue 100%)\",\r\n      imageUri: \"imgs/picture.png\",\r\n      uppercase: false,\r\n      url: \"https://www.ya.ru\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"main__creator creator\">\r\n      <div className=\"headers\">\r\n        <h2>Форма ввода параметров баннера</h2>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          className=\"creator__form\"\r\n          name=\"control-hooks\"\r\n          layout=\"vertical\"\r\n          size=\"small\"\r\n        >\r\n          <Form.Item name=\"url\" label=\"URL\" tooltip=\"URL ссылка\">\r\n            <Input placeholder=\"URL\" />\r\n          </Form.Item>\r\n          {/* end url */}\r\n\r\n          <Form.Item label=\"Название\" tooltip=\"Название баннера. 3 строки\">\r\n            <Row>\r\n              <Form.Item\r\n                name=\"label\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Требуется название баннера\",\r\n                  },\r\n                  {\r\n                    pattern: /^[а-яА-ЯёЁ\\w]+/,\r\n                    message: 'Начните с цифры, буквы или c подчеркивания \"_\"',\r\n                  },\r\n                ]}\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"Название баннера\" />\r\n              </Form.Item>\r\n              {/* end label */}\r\n\r\n              <Form.Item\r\n                name=\"uppercase\"\r\n                valuePropName=\"checked\"\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Checkbox>Заглавными буквами</Checkbox>\r\n              </Form.Item>\r\n              {/* end uppercase */}\r\n            </Row>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"textColor\"\r\n            label=\"Цвет текста\"\r\n            getValueFromEvent={(data) => {\r\n              return data;\r\n            }}\r\n          >\r\n            <ColorPicker onChange={() => {}} setGradient={\"\"} />\r\n          </Form.Item>\r\n          {/* end textColor */}\r\n\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Описание\"\r\n            tooltip=\"Описание баннера. 3 строки\"\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"Описание баннера в 3 строки...\"\r\n              autoSize\r\n            />\r\n          </Form.Item>\r\n          {/* end description */}\r\n\r\n          <BgPicker />\r\n\r\n          <UploadFile\r\n            form={form}\r\n            setImageUri={setImageUri}\r\n            uploadedImgs={uploadedImgs}\r\n            updateUploadedImgs={updateUploadedImgs}\r\n          />\r\n          {/* end upload image or insert uri */}\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n              disabled={!!bannerId || resetForm}\r\n            >\r\n              Создать\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n            >\r\n              Сброс\r\n            </Button>\r\n            <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n              Заполнить\r\n            </Button>\r\n          </Form.Item>\r\n          {/* end action buttons */}\r\n        </Form>\r\n        {/* end form */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n/* Старая версия заливки. Для супер-технарей-верстальщиков\r\n<Form.Item\r\n  name=\"bgcolor\"\r\n  label=\"Заливка\"\r\n  tooltip=\"Цвета, которые поддерживает css свойство 'background'\"\r\n>\r\n  <Input placeholder=\"css background: #fff, white, gradients \" />\r\n</Form.Item> */\r\n/* end bgcolor */\r\n\r\n/* const onUpdate = (evt) => {\r\n    // evt.preventDefault();\r\n    form.validateFields();\r\n    let values = form.getFieldsValue();\r\n    if (values.label && values.label.trim()) {\r\n      if (typeof values.imageUri === \"object\") {\r\n        values.imageUri = imageUri;\r\n      }\r\n      values.id = bannerId;\r\n      Dispatch(updateBannerA(values));\r\n    }\r\n  };\r\n*/\r\n\r\n/* <Button\r\n    type=\"primary\"\r\n    htmlType=\"button\"\r\n    onClick={onUpdate}\r\n    style={{\r\n      marginRight: \"8px\",\r\n    }}\r\n    disabled={resetForm}\r\n  >\r\n    Сохранить\r\n  </Button>\r\n*/\r\n","C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Banners\\Banners.jsx",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Preview\\Preview.jsx",["76","77"],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\hook.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\tools\\helpers.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\actions\\index.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\reducers\\creatorReducer.js",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\UploadFile\\UploadFile.jsx",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\ColorPicker\\ColorPicker.jsx",["78","79"],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\BgPicker\\BgPicker.jsx",["80"],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\components\\Canvas\\CanvasBanner.jsx",[],"C:\\Users\\User\\Desktop\\theAvtBannerCreator\\src\\redux\\actions\\actionsType.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":27,"column":10,"nodeType":"87","messageId":"88","endLine":27,"endColumn":20},{"ruleId":"85","severity":1,"message":"89","line":13,"column":11,"nodeType":"87","messageId":"88","endLine":13,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":116,"column":9,"nodeType":"92","endLine":121,"endColumn":10},{"ruleId":"85","severity":1,"message":"93","line":37,"column":22,"nodeType":"87","messageId":"88","endLine":37,"endColumn":35},{"ruleId":"85","severity":1,"message":"94","line":38,"column":25,"nodeType":"87","messageId":"88","endLine":38,"endColumn":41},{"ruleId":"85","severity":1,"message":"95","line":3,"column":16,"nodeType":"87","messageId":"88","endLine":3,"endColumn":23},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'failedForm' is assigned a value but never used.","Identifier","unusedVar","'bannerId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setColorAttrs' is assigned a value but never used.","'setGradientAttrs' is assigned a value but never used.","'message' is defined but never used.","no-global-assign","no-unsafe-negation"]