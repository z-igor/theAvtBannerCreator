{"version":3,"sources":["redux/actions/actionsType.js","redux/reducers/creatorReducer.js","redux/reducers/index.js","redux/store.js","tools/helpers.js","components/UploadFile/UploadFile.jsx","hook.js","redux/actions/index.js","components/ColorPicker/ColorPicker.jsx","components/BgPicker/BgPicker.jsx","components/Creator/Creator.jsx","components/Banners/Banners.jsx","imgs/picture.png","components/Canvas/CanvasBanner.jsx","components/Preview/Preview.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CREATE_BANNER","DELETE_BANNER","UPDATE_BANNER","BANNER_ID","initialState","currentBanner","blankData","id","label","textColor","alpha","description","bgcolor","style","imageUri","uppercase","url","banners","blue","green","hue","red","saturation","value","combineReducers","creatorReducer","state","action","type","newBanner","data","map","b","filter","createStore","rootReducers","copyToClipboard","item","navigator","clipboard","writeText","then","message","success","console","warn","err","error","UploadFile","form","setImageUri","fileListImgs","updateUploadedImgs","useState","radioVal","setRadioVal","uploadProps","fileList","beforeUpload","file","name","onChange","info","status","transformFile","img","callback","reader","FileReader","readAsDataURL","addEventListener","result","getBase64","uri","Item","tooltip","Group","className","e","target","resetFields","icon","UploadOutlined","placeholder","useGetBannerInfo","bannerId","useSelector","s","bannerData","find","updateBannerA","chooseCurrentBannerA","color","gradient","points","left","degree","ColorPicker","setGradient","colorAttrs","gradientAttrs","onEndChange","isGradient","BgPicker","getValueFromEvent","tailLayout","wrapperCol","offset","span","Creator","Form","useForm","Dispatch","useDispatch","uploadedImgs","resetForm","setResetForm","setFailedForm","refBannerId","useRef","useEffect","values","getFieldsValue","current","setFieldsValue","onFinish","res","chars","charLength","length","i","charAt","Math","floor","random","makeRandomId","onFinishFailed","errorFields","onValuesChange","trim","layout","size","rules","required","pattern","margin","valuePropName","wrap","flex","TextArea","autoSize","htmlType","marginRight","disabled","onClick","Banners","onDeleteBanner2Click","deleteBannerA","title","QuestionCircleOutlined","marginLeft","fontSize","tabIndex","background","onDoubleClick","CanvasBanner","canvasElm","props","canvasRef","findColor","str","match","findPointsAngle","useCallback","width","height","r","x0","y0","angle","findLinGradAngle","PI","toFixed","x1","sin","y1","cos","multilineTxt","ctx","obj","y","tempStr","maxLength","isDesc","slice","fillStyle","canvasTxt","align","lineHeight","font","fontWeight","weight","drawText","x","draw","canvas","lingrad","radgrad","newImg","Image","setAttribute","onload","w","drawImage","h","src","picture","txt","toUpperCase","desc","strokeStyle","createLinearGradient","oneColor","twoColor","addColorStop","createRadialGradient","radius","fill","stroke","tl","tr","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","context","getContext","clearRect","restore","ref","Preview","htmlRef","setCanvasElm","bannerStyle","content","flexGrow","display","flexDirection","justifyContent","wrapper","borderRadius","maxWidth","maxHeight","overflow","bgColor","one","padding","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","textDecoration","link","WebkitLineClamp","WebkitBoxOrient","textOverflow","textTransform","paddingBottom","menu","PictureOutlined","href","download","SmileTwoTone","evt","headerC","toDataURL","replace","downloadPng","overlay","DownOutlined","outerHTML","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","storee","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64ae2461.chunk.js","sourcesContent":["export const CREATE_BANNER = \"CREATE-BANNER\";\r\nexport const DELETE_BANNER = \"DELETE-BANNER\";\r\nexport const UPDATE_BANNER = \"UPDATE-BANNER\";\r\nexport const BANNER_ID = \"BANNER-ID\";\r\nexport const BANNER_I = \"BANNER-I\";","import {\r\n  CREATE_BANNER,\r\n  UPDATE_BANNER,\r\n  BANNER_ID,\r\n  DELETE_BANNER\r\n} from \"../actions/actionsType.js\";\r\n\r\nconst initialState = {\r\n  currentBanner: \"\",\r\n  blankData: {\r\n    id: \"\",\r\n    label: \"бланк для баннера\",\r\n    textColor: {\r\n      alpha: 1,\r\n      \"​​blue\": 13,\r\n      \"​​green\": 13,\r\n      \"​​hue\": 0,\r\n      \"​​red\": 114,\r\n      \"​​saturation\": 88,\r\n      \"​​style\": \"rgba,114, 13, 13, 1)\",\r\n      \"​​value\": 45,\r\n    },\r\n    description: \"Пустой бланк для баннера. Нужен для создания нового баннера и добавления в список\",\r\n    bgcolor: {\r\n      style: \"linear-gradient(0deg, rgba(29, 219, 229, 1) 0%, rgba(255, 255, 255, 1) 100%)\"\r\n    },\r\n    imageUri: \"\",\r\n    uppercase: true,\r\n    url: \"https://www.ya.ru\",\r\n  },\r\n  banners: [{\r\n      id: \"\",\r\n      label: \"бланк для баннера\",\r\n      textColor: {\r\n        alpha: 1,\r\n        blue: 10,\r\n        green: 10,\r\n        hue: 0,\r\n        red: 12,\r\n        saturation: 16,\r\n        style: \"rgba(12, 10, 10, 1)\",\r\n        value: 5,\r\n      },\r\n      description: \"Пустой бланк для баннера. Нужен для создания нового баннера и добавления в список\",\r\n      bgcolor: {\r\n        style: \"linear-gradient(0deg, rgba(29, 219, 229, 1) 0%, rgba(255, 255, 255, 1) 100%)\"\r\n      },\r\n      imageUri: \"\",\r\n      uppercase: true,\r\n      url: \"https://www.ya.ru\",\r\n    },\r\n    {\r\n      id: \"00a$\",\r\n      label: \"surviv Battle Royale\",\r\n      textColor: {\r\n        alpha: 1,\r\n        blue: 10,\r\n        green: 10,\r\n        hue: 0,\r\n        red: 12,\r\n        saturation: 16,\r\n        style: \"rgba(12, 10, 10, 1)\",\r\n        value: 5,\r\n      },\r\n      description: \"Surviv.io - это бесплатная браузерная многопользовательская онлайн-игра на базе браузера, разработанная Джастином Кимом и Ником Кларком. Она вышла в октябре 2017 года на своем сайте surviv.io\",\r\n      bgcolor: {\r\n        style: \"linear-gradient(45deg, rgba(0, 100, 0, 1), rgba(144, 238, 144, 1))\"\r\n      },\r\n      imageUri: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Surviv.io.png/512px-Surviv.io.png\",\r\n      uppercase: false,\r\n      url: \"https://www.surviv.io\",\r\n    },\r\n    {\r\n      id: \"00a&\",\r\n      label: \"World of warcraft\",\r\n      textColor: {\r\n        alpha: 1,\r\n        blue: 10,\r\n        green: 10,\r\n        hue: 0,\r\n        red: 12,\r\n        saturation: 16,\r\n        style: \"rgba(12, 10, 10, 1)\",\r\n        value: 5,\r\n      },\r\n      description: \"Вышло дополнение Shadowlands, и его первый сезон начался. Сражайтесь с опасными противниками, получайте новые награды и достижения, а также участвуйте в рейдах в замке Нафрия — оплоте сира Денатрия, расположенном во мрачном сердце Ревендрета.\",\r\n      bgcolor: {\r\n        style: \"radial-gradient(at bottom, rgba(255, 124, 124, 1) 40%, rgba(128, 0, 128, 1) 100%)\"\r\n      },\r\n      imageUri: \"https://assets.worldofwarcraft.com/static/components/Logo/Logo-wow-sitenav.596840db77b4d485a44d65e897e3de57.png\",\r\n      uppercase: false,\r\n      url: \"https://worldofwarcraft.com/ru-ru/\",\r\n    }\r\n  ]\r\n};\r\n\r\nexport const creatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_BANNER: {\r\n      let newBanner = {\r\n        ...action.data\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        banners: [...state.banners.map(b => !b.id ? state.blankData : b), newBanner],\r\n      }\r\n    }\r\n    case UPDATE_BANNER: {\r\n      let id = action.data.id;\r\n\r\n      return {\r\n        ...state,\r\n        banners: state.banners.map(b => {\r\n          if (b.id === id) {\r\n            return {\r\n              ...b,\r\n              ...action.data\r\n            };\r\n          }\r\n\r\n          return b;\r\n        }),\r\n      }\r\n    }\r\n    case DELETE_BANNER: {\r\n      const id = action.id;\r\n\r\n      return {\r\n        ...state,\r\n        banners: state.banners.filter(b => b.id === id ? false : true),\r\n      }\r\n    }\r\n    case BANNER_ID: {\r\n      let id = action.id;\r\n\r\n      return {\r\n        ...state,\r\n        currentBanner: id,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  combineReducers\r\n} from \"redux\";\r\nimport { creatorReducer } from \"./creatorReducer\";\r\n\r\nexport default combineReducers({\r\n  creatorReducer\r\n});","import {\r\n  createStore\r\n} from 'redux';\r\nimport rootReducers from \"./reducers\";\r\n\r\n\r\nexport default createStore(rootReducers);","import {\r\n  message\r\n} from \"antd\";\r\n\r\n/**\r\n * Прочесть данные как base64-кодированный URI\r\n * @param {any} img\r\n * @param {function} callback\r\n */\r\nexport function getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(img);\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n\r\n  /* Если нужен blob:url\r\n  if (typeof img === \"string\") {\r\n    return URL.createObjectURL(img);\r\n  }\r\n */\r\n};\r\n\r\n/**\r\n * @returns {string}\r\n */\r\nexport function makeRandomId() {\r\n  let res = '';\r\n  let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let charLength = chars.length;\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    res += chars.charAt(Math.floor(Math.random() * charLength));\r\n  }\r\n\r\n  return (Math.floor(Math.random() * 98 + 1) + res);\r\n}\r\n\r\n\r\n/**\r\n * 1 вариант.\r\n * document.execCommand(\"copy\");\r\n *\r\n * \"copy\" работает при выделения текста\r\n * т.е. придется скрыто создавать input || textarea,\r\n * чтобы скопировать json\r\n\r\n * 2 вариант.\r\n * Асинхронный Clipboard API\r\n *\r\n * IE не поддерживает\r\n * Edge поддерживает\r\n * -------------------------\r\n * Копирует в буфер обмена текст переданный как аргумент\r\n * в navigator.clipboard.writeText(текст)\r\n * возвращает Promise\r\n * @param {*} item строка\r\n */\r\nexport function copyToClipboard(item) {\r\n  if (navigator) {\r\n    navigator.clipboard.writeText(item).then(\r\n      function () {\r\n        message.success('Данные скопированны в буфер обмена. Выведены в консоль');\r\n        console.warn(\"Success copy: \", item);\r\n      },\r\n      function (err) {\r\n        message.success('Ошибка. Скопировать не возможно');\r\n        console.error(\"Could not copy text: \", err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Не обработана ошибка при скачивании\r\n * Рассматриваем идеальный случай!\r\n * Скачать canvas в формате image/png\r\n * @param {*} canvasElm элемент канвас\r\n * @param {*} evt событие\r\n */\r\nexport function downloadPng(canvasElm, evt) {\r\n  const target = evt.target;\r\n  // const current = evt.currentTarget;\r\n  let headerC = canvasElm.toDataURL(\"image/png\");\r\n\r\n  headerC = headerC.replace(\r\n    /^data:image\\/[^;]*/,\r\n    \"data:application/octet-stream\"\r\n  );\r\n\r\n  headerC = headerC.replace(\r\n    /^data:application\\/octet-stream/,\r\n    \"data:application/octet-stream;headers=Content-Disposition%3A%20attachment%3B%20filename=banner.png\"\r\n  );\r\n\r\n  target.href = headerC;\r\n}\r\n\r\n/**\r\n * https://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas\r\n * \r\n * Draws a rounded rectangle using the current state of the canvas.\r\n * If you omit the last three params, it will draw a rectangle\r\n * outline with a 5 pixel border radius\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {Number} x The top left x coordinate\r\n * @param {Number} y The top left y coordinate\r\n * @param {Number} width The width of the rectangle\r\n * @param {Number} height The height of the rectangle\r\n * @param {Number} [radius = 5] The corner radius; It can also be an object \r\n *                 to specify different radii for corners\r\n * @param {Number} [radius.tl = 0] Top left\r\n * @param {Number} [radius.tr = 0] Top right\r\n * @param {Number} [radius.br = 0] Bottom right\r\n * @param {Number} [radius.bl = 0] Bottom left\r\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\r\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\r\n */\r\nexport function roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n  if (typeof stroke === 'undefined') {\r\n    stroke = true;\r\n  }\r\n  if (typeof radius === 'undefined') {\r\n    radius = 5;\r\n  }\r\n  if (typeof radius === 'number') {\r\n    radius = {\r\n      tl: radius,\r\n      tr: radius,\r\n      br: radius,\r\n      bl: radius\r\n    };\r\n  } else {\r\n    var defaultRadius = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n    for (var side in defaultRadius) {\r\n      radius[side] = radius[side] || defaultRadius[side];\r\n    }\r\n  }\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n  ctx.closePath();\r\n  if (fill) {\r\n    ctx.fill();\r\n  }\r\n  if (stroke) {\r\n    ctx.stroke();\r\n  }\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { Form, Input, Button, Upload, message, Radio } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { getBase64 } from \"../../tools/helpers\";\r\n\r\nexport default function UploadFile({\r\n  form,\r\n  setImageUri,\r\n  fileListImgs,\r\n  updateUploadedImgs,\r\n  ...props\r\n}) {\r\n  const [radioVal, setRadioVal] = useState(1);\r\n\r\n  const uploadProps = {\r\n    fileList: fileListImgs,\r\n    beforeUpload: (file) => {\r\n      if (file.type !== \"image/png\") {\r\n        message.error(`${file.name} не png файл`);\r\n      }\r\n\r\n      return file.type === \"image/png\";\r\n    },\r\n    onChange: (info) => {\r\n      updateUploadedImgs(info.fileList.filter((file) => !!file.status));\r\n    },\r\n    transformFile: (file) => {\r\n      getBase64(file, (uri) => {\r\n        setImageUri(uri);\r\n      });\r\n    },\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setRadioVal(e.target.value);\r\n\r\n    if (radioVal === 2) {\r\n      form.resetFields([\"imageUri\"]);\r\n      updateUploadedImgs([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        label=\"Иллюстрация\"\r\n        tooltip=\"Загрузить только png иллюстрацию или через URI\"\r\n      >\r\n        <Radio.Group\r\n          className=\"radio-group\"\r\n          onChange={onChange}\r\n          value={radioVal}\r\n        >\r\n          <Radio value={1}>URI</Radio>\r\n          <Radio value={2}>Загрузить</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      {radioVal === 2 && (\r\n        <Form.Item name=\"imageUri\" type=\"url\">\r\n          <Upload {...uploadProps}>\r\n            <Button icon={<UploadOutlined />}>Загрузить png</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n      )}\r\n\r\n      {radioVal === 1 && (\r\n        <Form.Item name=\"imageUri\">\r\n          <Input placeholder=\"URI\" />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  useSelector\r\n} from \"react-redux\";\r\n\r\nexport function useGetBannerInfo() {\r\n  const bannerId = useSelector((s) => s.creatorReducer.currentBanner)\r\n\r\n  const bannerData = useSelector((state) =>\r\n    state.creatorReducer.banners.find((b) => b.id === bannerId)\r\n  );\r\n\r\n  return {\r\n    bannerId,\r\n    bannerData\r\n  };\r\n}","import {\r\n  CREATE_BANNER,\r\n  UPDATE_BANNER,\r\n  BANNER_ID,\r\n  DELETE_BANNER\r\n} from \"./actionsType.js\";\r\n\r\nexport const createBannerA = (data) => ({\r\n  type: CREATE_BANNER,\r\n  data\r\n});\r\n\r\nexport const updateBannerA = (data) => ({\r\n  type: UPDATE_BANNER,\r\n  data\r\n});\r\n\r\nexport const chooseCurrentBannerA = (id) => ({\r\n  type: BANNER_ID,\r\n  id\r\n});\r\n\r\nexport const deleteBannerA = (id) => ({\r\n  type: DELETE_BANNER,\r\n  id\r\n});","import React, { useState } from \"react\";\r\nimport { ColorPicker as Picker } from \"react-color-gradient-picker\";\r\nimport \"react-color-gradient-picker/dist/index.css\";\r\n\r\nconst color = {\r\n  red: 255,\r\n  green: 0,\r\n  blue: 0,\r\n  alpha: 1,\r\n};\r\n\r\nconst gradient = {\r\n  points: [\r\n    {\r\n      left: 0,\r\n      red: 0,\r\n      green: 0,\r\n      blue: 0,\r\n      alpha: 1,\r\n    },\r\n    {\r\n      left: 100,\r\n      red: 255,\r\n      green: 0,\r\n      blue: 0,\r\n      alpha: 1,\r\n    },\r\n  ],\r\n  degree: 0,\r\n  type: \"linear\",\r\n};\r\n\r\nexport default function ColorPicker({\r\n  setGradient,\r\n  onChange,\r\n}) {\r\n  const [colorAttrs, setColorAttrs] = useState(color);\r\n  const [gradientAttrs, setGradientAttrs] = useState(gradient);\r\n\r\n  return (\r\n    <>\r\n      {setGradient ? (\r\n        <Picker\r\n          onEndChange={(e) => onChange(e)}\r\n          gradient={gradientAttrs}\r\n          isGradient\r\n        />\r\n      ) : (\r\n        <Picker onEndChange={(e) => onChange(e)} color={colorAttrs} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Form, Radio } from \"antd\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\n\r\nexport default function BgPicker({ ...props }) {\r\n  const [radioVal, setRadioVal] = useState(1);\r\n\r\n  const onChange = (e) => {\r\n    setRadioVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form.Item label=\"Заливка\">\r\n        <Radio.Group\r\n          className=\"radio-group\"\r\n          onChange={onChange}\r\n          value={radioVal}\r\n        >\r\n          <Radio value={1}>Сплошной цвет</Radio>\r\n          <Radio value={2}>Градиент</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      {radioVal === 1 && (\r\n        <Form.Item\r\n          name=\"bgcolor\"\r\n          getValueFromEvent={(data) => {\r\n            return data;\r\n          }}\r\n        >\r\n          <ColorPicker onChange={() => {}} setGradient={\"\"} />\r\n        </Form.Item>\r\n      )}\r\n\r\n      {radioVal === 2 && (\r\n        <Form.Item\r\n          name=\"bgcolor\"\r\n          getValueFromEvent={(data) => {\r\n            return data;\r\n          }}\r\n        >\r\n          <ColorPicker onChange={() => {}} setGradient={true} />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport UploadFile from \"../UploadFile/UploadFile\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { createBannerA, updateBannerA } from \"../../redux/actions/\";\r\nimport { makeRandomId } from \"../../tools/helpers\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport BgPicker from \"../BgPicker/BgPicker\";\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 0,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function Creator() {\r\n  const [form] = Form.useForm();\r\n  const Dispatch = useDispatch();\r\n  const { bannerId, bannerData } = useGetBannerInfo();\r\n\r\n  const [imageUri, setImageUri] = useState();\r\n  const [uploadedImgs, updateUploadedImgs] = useState([]);\r\n  const [resetForm, setResetForm] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [failedForm, setFailedForm] = useState(false);\r\n  const refBannerId = useRef(bannerId);\r\n\r\n  const onValuesChange = () => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (values.label && values.label.trim()) {\r\n      if (typeof values.imageUri !== \"object\") {\r\n        Dispatch(updateBannerA(values));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const values = {\r\n      ...form.getFieldsValue(),\r\n      id: bannerId,\r\n    };\r\n\r\n    if (refBannerId.current !== bannerId) {\r\n      updateUploadedImgs([]);\r\n      refBannerId.current = bannerId;\r\n    }\r\n\r\n    form.setFieldsValue({ ...bannerData });\r\n\r\n    if (typeof values.imageUri === \"object\") {\r\n      Dispatch(updateBannerA({ ...values, imageUri }));\r\n    }\r\n  }, [Dispatch, bannerData, bannerId, form, imageUri]);\r\n\r\n  const onFinish = (values) => {\r\n    values.id = makeRandomId();\r\n\r\n    Dispatch(createBannerA(values));\r\n  };\r\n\r\n  const onFinishFailed = (info) => {\r\n    setFailedForm(!!info.errorFields.length);\r\n  };\r\n\r\n  const onReset = () => {\r\n    updateUploadedImgs([]);\r\n    setResetForm(true);\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      label: \"текст баннера\",\r\n      description:\r\n        \"Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum\",\r\n      bgcolor: \"linear-gradient(to top, #7e7eff 20%, skyblue 100%)\",\r\n      imageUri: \"imgs/picture.png\",\r\n      uppercase: false,\r\n      url: \"https://www.ya.ru\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"main__creator creator\">\r\n      <div className=\"headers\">\r\n        <h2>Форма ввода параметров баннера</h2>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <Form\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          className=\"creator__form\"\r\n          name=\"control-hooks\"\r\n          layout=\"vertical\"\r\n          size=\"small\"\r\n        >\r\n          <Form.Item name=\"url\" label=\"URL\" tooltip=\"URL ссылка\">\r\n            <Input placeholder=\"URL\" />\r\n          </Form.Item>\r\n          {/* end url */}\r\n\r\n          <Form.Item label=\"Название\" tooltip=\"Название баннера. 3 строки\">\r\n            <Row>\r\n              <Form.Item\r\n                name=\"label\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Требуется название баннера\",\r\n                  },\r\n                  {\r\n                    pattern: /^[а-яА-ЯёЁ\\w]+/,\r\n                    message: 'Начните с цифры, буквы или c подчеркивания \"_\"',\r\n                  },\r\n                ]}\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Input placeholder=\"Название баннера\" />\r\n              </Form.Item>\r\n              {/* end label */}\r\n\r\n              <Form.Item\r\n                name=\"uppercase\"\r\n                valuePropName=\"checked\"\r\n                style={{\r\n                  margin: \"0 10px 0 0\",\r\n                }}\r\n              >\r\n                <Checkbox>Заглавными буквами</Checkbox>\r\n              </Form.Item>\r\n              {/* end uppercase */}\r\n            </Row>\r\n          </Form.Item>\r\n\r\n          <Row wrap={true}>\r\n            <Col flex=\"auto\">\r\n              <Form.Item\r\n                name=\"textColor\"\r\n                label=\"Цвет текста\"\r\n                getValueFromEvent={(data) => {\r\n                  return data;\r\n                }}\r\n              >\r\n                <ColorPicker onChange={() => {}} setGradient={\"\"} />\r\n              </Form.Item>\r\n              {/* end textColor */}\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n              <BgPicker />\r\n              {/* end BgPicker */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Описание\"\r\n            tooltip=\"Описание баннера. 3 строки\"\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"Описание баннера в 3 строки...\"\r\n              autoSize\r\n            />\r\n          </Form.Item>\r\n          {/* end description */}\r\n\r\n          <UploadFile\r\n            form={form}\r\n            setImageUri={setImageUri}\r\n            uploadedImgs={uploadedImgs}\r\n            updateUploadedImgs={updateUploadedImgs}\r\n          />\r\n          {/* end upload image or insert uri */}\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n              disabled={!!bannerId || resetForm}\r\n            >\r\n              Создать\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n              style={{\r\n                marginRight: \"8px\",\r\n              }}\r\n            >\r\n              Сброс\r\n            </Button>\r\n            <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n              Заполнить\r\n            </Button>\r\n          </Form.Item>\r\n          {/* end action buttons */}\r\n        </Form>\r\n        {/* end form */}\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Tooltip } from \"antd\";\r\nimport { chooseCurrentBannerA, deleteBannerA } from \"../../redux/actions\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Banners() {\r\n  const Dispatch = useDispatch();\r\n  const banners = useSelector((state) => state.creatorReducer.banners);\r\n\r\n  const onChooseBanner = (id) => {\r\n    Dispatch(chooseCurrentBannerA(id));\r\n  };\r\n\r\n  const onDeleteBanner2Click = (id) => {\r\n    if (id) {\r\n      Dispatch(deleteBannerA(id));\r\n      Dispatch(chooseCurrentBannerA(\"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"main__banners banners\">\r\n      <div className=\"headers\">\r\n        <h2>\r\n          Баннеры\r\n          <Tooltip title=\"Нажмите на баннер, чтобы его открыть. Для его удаления, нажмите 2 раза по не пустому '#id' баннера\">\r\n            <QuestionCircleOutlined\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        </h2>\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul className=\"banners__list\">\r\n          {banners.map((b) => (\r\n            <li\r\n              className=\"banners__item\"\r\n              key={b.id}\r\n              onClick={(e) => onChooseBanner(b.id)}\r\n              tabIndex=\"0\"\r\n            >\r\n              <span\r\n                className=\"banners__item-border\"\r\n                style={{ background: `${b.bgcolor.style}` }}\r\n              >\r\n                &nbsp;\r\n              </span>\r\n              <p>{b.label}</p>\r\n              <i onDoubleClick={() => onDeleteBanner2Click(b.id)}>\r\n                {b.id ? `#${b.id}` : \"#____\"}\r\n              </i>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/picture.4aa12da7.png\";","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { roundRect } from \"../../tools/helpers\";\r\nimport canvasTxt from \"canvas-txt\";\r\n\r\nimport picture from \"../../imgs/picture.png\";\r\n\r\nexport default function CanvasBanner({ canvasElm, ...props }) {\r\n  const canvasRef = useRef(null);\r\n  const { bannerData } = useGetBannerInfo();\r\n\r\n  const findColor = (str) =>\r\n    str.match(/(rgba\\(\\d+,\\s\\d+,\\s\\d+,\\s\\d\\)|(rgb\\(\\d+,\\s\\d+,\\s\\d+\\)))+/g);\r\n\r\n  const findLinGradAngle = (str) => str.match(/(\\d{1,3})deg/)[1];\r\n\r\n  const findPointsAngle = useCallback(function (str, { width, height }) {\r\n    let r = height;\r\n    let x0 = width;\r\n    let y0 = 0;\r\n    let angle = findLinGradAngle(str);\r\n\r\n    if (angle === 0 || angle >= 350) {\r\n      r = height;\r\n    }\r\n\r\n    if (angle >= 90 && angle <= 134) {\r\n      x0 = 0;\r\n      y0 = 0;\r\n      r = height;\r\n    }\r\n\r\n    if (angle >= 135 && angle <= 180) {\r\n      y0 = height;\r\n      r = height + 50;\r\n    }\r\n\r\n    if (angle >= 180 && angle <= 225) {\r\n      x0 = 0;\r\n      y0 = height;\r\n      r = height;\r\n    }\r\n\r\n    if (angle >= 225 && angle <= 270) {\r\n      x0 = 0;\r\n      y0 = height;\r\n      r = width;\r\n    }\r\n\r\n    if (angle >= 270 && angle <= 315) {\r\n      x0 = 0;\r\n      y0 = 0;\r\n      r = height + 50;\r\n    }\r\n\r\n    angle = +((angle / 180) * Math.PI).toFixed(4);\r\n\r\n    let x1 = Math.floor(x0 + r * Math.sin(-angle));\r\n    let y1 = Math.floor(y0 + r * Math.cos(+angle));\r\n\r\n    return { x0, y0, x1, y1, angle };\r\n  }, []);\r\n\r\n  const multilineTxt = (ctx, str, { fontSize = 30, height = 100, ...obj }) => {\r\n    let y = obj.y - height;\r\n    let tempStr = str;\r\n    let maxLength = 60;\r\n\r\n    if (obj.isDesc) {\r\n      maxLength = 110;\r\n      tempStr = str.slice(0, maxLength);\r\n    }\r\n\r\n    tempStr = str.slice(0, maxLength);\r\n\r\n    if (str.length >= maxLength) {\r\n      tempStr += \"...\";\r\n    }\r\n\r\n    ctx.fillStyle = obj.color;\r\n    canvasTxt.align = \"left\";\r\n    canvasTxt.lineHeight = height / 3;\r\n    canvasTxt.fontSize = fontSize;\r\n    canvasTxt.font = \"Roboto, Calibri, sans-serif\";\r\n    canvasTxt.fontWeight = obj.weight;\r\n    canvasTxt.drawText(ctx, tempStr, obj.x, y, 280, height);\r\n  };\r\n\r\n  const draw = useCallback(\r\n    function (ctx, canvas) {\r\n      let lingrad = null;\r\n      let radgrad = null;\r\n\r\n      const newImg = new Image();\r\n\r\n      /**\r\n       * The operation is insecure.\r\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image#Implementing_the_save_feature\r\n       */\r\n      newImg.setAttribute(\"crossOrigin\", \"Anonymous\");\r\n\r\n      newImg.onload = function () {\r\n        let w = 260;\r\n        let h = 300;\r\n\r\n        ctx.drawImage(\r\n          newImg,\r\n          newImg.width > 500 ? -w / 3 : 0 /* dx */,\r\n          0 /* dy */,\r\n          newImg.width > 500 ? w * 2.5 : w + 50 /* w */,\r\n          newImg.width > 500 ? h * 2.5 : h + 50 /* h */,\r\n          20,\r\n          20,\r\n          w,\r\n          h\r\n        );\r\n      };\r\n\r\n      newImg.src = bannerData.imageUri ? bannerData.imageUri : picture;\r\n\r\n      const label = {\r\n        txt: bannerData.uppercase\r\n          ? bannerData.label.toUpperCase()\r\n          : bannerData.label,\r\n      };\r\n\r\n      const desc = {\r\n        txt: bannerData.description,\r\n      };\r\n\r\n      ctx.strokeStyle = \"transparent\";\r\n\r\n      if (bannerData.bgcolor.style.match(\"linear-gradient\")) {\r\n        const { x0, y0, x1, y1 } = findPointsAngle(\r\n          bannerData.bgcolor.style,\r\n          canvas\r\n        );\r\n\r\n        lingrad = ctx.createLinearGradient(x0, y0, x1, y1);\r\n\r\n        let [oneColor, twoColor] = findColor(bannerData.bgcolor.style);\r\n        // console.log(findPointsAngle(bannerData.bgcolor.style, canvas));\r\n\r\n        lingrad.addColorStop(0, twoColor);\r\n        lingrad.addColorStop(1, oneColor);\r\n\r\n        ctx.fillStyle = lingrad || \"#ddd\";\r\n      } else if (bannerData.bgcolor.style.match(\"radial-gradient\")) {\r\n        radgrad = ctx.createRadialGradient(\r\n          canvas.width / 2,\r\n          canvas.height / 2,\r\n          canvas.width / 9 /* begin rad */,\r\n          canvas.width / 2,\r\n          canvas.height / 2,\r\n          canvas.width /* finish rad */\r\n        );\r\n\r\n        let [oneColor, twoColor] = findColor(bannerData.bgcolor.style);\r\n\r\n        radgrad.addColorStop(0, oneColor);\r\n        radgrad.addColorStop(1, twoColor);\r\n\r\n        ctx.fillStyle = radgrad || \"#ddd\";\r\n      } else {\r\n        ctx.fillStyle = bannerData.bgcolor.style || \"#ddd\";\r\n      }\r\n\r\n      roundRect(ctx, 0, 0, canvas.width, canvas.height, 15, true);\r\n\r\n      multilineTxt(ctx, label.txt, {\r\n        color: bannerData.textColor.style,\r\n        x: 10,\r\n        y: canvas.height - 70,\r\n        weight: 500,\r\n      });\r\n\r\n      multilineTxt(ctx, desc.txt, {\r\n        height: 45,\r\n        fontSize: 14,\r\n        color: bannerData.textColor.style,\r\n        x: 10,\r\n        y: canvas.height - 20,\r\n        weight: \"normal\",\r\n        isDesc: true,\r\n      });\r\n    },\r\n    [bannerData, findPointsAngle]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.restore();\r\n\r\n    draw(context, canvas);\r\n    canvasElm(canvas);\r\n  }, [draw, bannerData, canvasElm]);\r\n\r\n  return (\r\n    <canvas id=\"canvas\" ref={canvasRef} {...props} width=\"300\" height=\"400\" />\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport picture from \"../../imgs/picture.png\";\r\n\r\nimport { Button, Dropdown, Menu, message } from \"antd\";\r\nimport { copyToClipboard, downloadPng } from \"../../tools/helpers\";\r\nimport CanvasBanner from \"../Canvas/CanvasBanner\";\r\nimport { useGetBannerInfo } from \"../../hook\";\r\nimport { DownOutlined, PictureOutlined, SmileTwoTone } from \"@ant-design/icons\";\r\n\r\nexport default function Preview() {\r\n  const htmlRef = useRef();\r\n  const [canvasElm, setCanvasElm] = useState();\r\n  const { bannerData } = useGetBannerInfo();\r\n\r\n  const onDownloadPng = (e) => {\r\n    message.info(\r\n      {\r\n        content: (\r\n          <span>\r\n            Запуск ракет через 3... 2... 1... <SmileTwoTone />\r\n          </span>\r\n        ),\r\n      },\r\n      2\r\n    );\r\n    downloadPng(canvasElm, e);\r\n  };\r\n\r\n  const onSerializeJSONClick = (e) => {\r\n    let copyJson = JSON.stringify(bannerData, null, 2);\r\n    copyToClipboard(copyJson);\r\n  };\r\n\r\n  const onGetHTMLClick = (e) => {\r\n    let copyHTML = htmlRef.current.outerHTML;\r\n    copyToClipboard(copyHTML);\r\n  };\r\n\r\n  const defRes = {\r\n    label: \"авито баннер\",\r\n    desc:\r\n      \"Далеко-далеко за словесными, горами в стране гласных и согласных живут рыбные тексты. Прямо имени но свое! Журчит первую она страна даже инициал деревни алфавит подзаголовок даль строчка переписывается, продолжил имеет пустился предупредила?\",\r\n    href: \"#/\",\r\n  };\r\n\r\n  const bannerStyle = {\r\n    content: {\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n    },\r\n    wrapper: {\r\n      borderRadius: \"15px\",\r\n      height: \"100%\",\r\n      maxWidth: \"300px\",\r\n      maxHeight: \"400px\",\r\n      margin: \"0 auto\",\r\n      overflow: \"hidden\",\r\n    },\r\n    bgColor: {\r\n      background: bannerData.bgcolor ? bannerData.bgcolor.style : \"#e6e6e6\",\r\n      height: \"inherit\",\r\n    },\r\n    one: {\r\n      height: \"inherit\",\r\n      padding: \"2rem .8rem\",\r\n      color: bannerData.textColor ? bannerData.textColor.style : \"#333\",\r\n      backgroundImage: bannerData.imageUri\r\n        ? `url(${bannerData.imageUri})`\r\n        : `url(${picture})`,\r\n      backgroundSize: \"70%\",\r\n      backgroundPosition: \"top 25px center\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      textDecoration: \"none\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"#333\",\r\n    },\r\n    label: {\r\n      display: \"-webkit-box\",\r\n      WebkitLineClamp: 3,\r\n      WebkitBoxOrient: \"vertical\",\r\n      textOverflow: \"ellipsis\",\r\n      fontSize: \"2rem\",\r\n      lineHeight: \"2rem\",\r\n      fontWeight: \"600\",\r\n      textTransform: bannerData.uppercase ? \"uppercase\" : \"\",\r\n      maxWidth: \"260px\",\r\n      overflow: \"hidden\",\r\n      color: \"inherit\",\r\n      paddingBottom: \"5px\",\r\n    },\r\n    desc: {\r\n      display: \"-webkit-box\",\r\n      WebkitLineClamp: 3,\r\n      WebkitBoxOrient: \"vertical\",\r\n      fontSize: \"calc(50vh*0.048)\",\r\n      lineHeight: \"calc(50vh*0.049)\",\r\n      overflow: \"hidden\",\r\n    },\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item\r\n        key=\"1\"\r\n        icon={<PictureOutlined />}\r\n        disabled={!bannerData.imageUri}\r\n      >\r\n        <a href={bannerData.imageUri} target=\"blank\" download=\"image.png\">\r\n          Картинку?\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" icon={<PictureOutlined />}>\r\n        <a\r\n          href=\"&\"\r\n          target=\"blank\"\r\n          onClick={onDownloadPng}\r\n          download=\"banner.png\"\r\n        >\r\n          Баннер?\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"app__div app__preview preview\">\r\n      <div className=\"headers\">\r\n        <h2>Превью баннера</h2>\r\n      </div>\r\n\r\n      <section\r\n        className=\"preview__content content\"\r\n        ref={htmlRef}\r\n        style={bannerStyle.content}\r\n      >\r\n        <div className=\"preview__wrapper\" style={bannerStyle.wrapper}>\r\n          <div className=\"preview__bg-color\" style={bannerStyle.bgColor}>\r\n            <a\r\n              className=\"preview__one\"\r\n              target=\"blank\"\r\n              style={bannerStyle.one}\r\n              href={bannerData.url}\r\n            >\r\n              <h1 className=\"preview__label\" style={bannerStyle.label}>\r\n                {bannerData.label ? bannerData.label : defRes.label}\r\n              </h1>\r\n\r\n              {bannerData.description && (\r\n                <p className=\"preview__desc\" style={bannerStyle.desc}>\r\n                  {bannerData.description}\r\n                </p>\r\n              )}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* end content banner */}\r\n\r\n      <section className=\"preview__actions\">\r\n        <p>Экспорт</p>\r\n        <div className=\"preview__action-btns\">\r\n          <Dropdown overlay={menu}>\r\n            <Button type=\"primary\">\r\n              png <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          <Button type=\"primary\" onClick={onGetHTMLClick}>\r\n            html\r\n          </Button>\r\n          <Button type=\"primary\" onClick={onSerializeJSONClick}>\r\n            json\r\n          </Button>\r\n        </div>\r\n      </section>\r\n      <div className=\"visible-hidden\">\r\n        <CanvasBanner canvasElm={setCanvasElm} />\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Creator from \"./components/Creator/Creator\";\r\nimport Banners from \"./components/Banners/Banners\";\r\nimport Preview from \"./components/Preview/Preview\";\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Preview />\r\n      <main className=\"app__div app__main main\">\r\n        <Creator />\r\n        <Banners />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\nimport './index.css';\r\nimport \"./styles/index.scss\";\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nwindow.storee = store;\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}